[{"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\index.js":"1","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\App.js":"2","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\reducer.js":"3","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\reportWebVitals.js":"4","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\StateProvider.js":"5","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\Home.js":"6","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\SearchPage.js":"7","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\News.js":"8","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\NewsPage.js":"9","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\useGoogleSearch.js":"10","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\Search.js":"11","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\useNews.js":"12","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\Image.js":"13","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\keys.js":"14"},{"size":477,"mtime":1705777622484,"results":"15","hashOfConfig":"16"},{"size":707,"mtime":1705789482192,"results":"17","hashOfConfig":"16"},{"size":377,"mtime":1705777622546,"results":"18","hashOfConfig":"16"},{"size":362,"mtime":1705777622578,"results":"19","hashOfConfig":"16"},{"size":364,"mtime":1705777622434,"results":"20","hashOfConfig":"16"},{"size":973,"mtime":1705803857368,"results":"21","hashOfConfig":"16"},{"size":3919,"mtime":1705813627317,"results":"22","hashOfConfig":"16"},{"size":1741,"mtime":1705803599445,"results":"23","hashOfConfig":"16"},{"size":9973,"mtime":1705803737835,"results":"24","hashOfConfig":"16"},{"size":782,"mtime":1705814383313,"results":"25","hashOfConfig":"16"},{"size":1660,"mtime":1705835836218,"results":"26","hashOfConfig":"16"},{"size":794,"mtime":1705802625119,"results":"27","hashOfConfig":"16"},{"size":2346,"mtime":1705818057468,"results":"28","hashOfConfig":"16"},{"size":91,"mtime":1705813476526,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"14ve0g0",{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"48","messages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\index.js",[],["65","66"],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\App.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\reducer.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\reportWebVitals.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\StateProvider.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\Home.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\SearchPage.js",["67"],"import React from \"react\";\nimport { useStateValue } from \"../StateProvider\";\nimport useGoogleSearch from \"../useGoogleSearch\";\nimport \"./SearchPage.css\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport ImageIcon from \"@material-ui/icons/Image\";\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\nimport RoomIcon from \"@material-ui/icons/Room\";\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\nimport { Link } from \"react-router-dom\";\nimport { Search } from \"../components/Search\";\nimport Image from \"../components/Image\";\n\nfunction SearchPage() {\n  const [{ term }, dispatch] = useStateValue();\n\n  const { data } = useGoogleSearch(term);\n\n  console.log(data);\n\n  return (\n    <div className=\"flex\">\n    <div className=\"searchPage\">\n      <div className=\"searchPage__header\">\n        <Link to=\"/\">\n          <img\n            className=\"searchPage__logo\"\n            src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\n            alt=\"\"\n          />\n        </Link>\n\n        <div className=\"searchPage__headerBody\">\n          <Search hideButtons />\n          <div className=\"searchPage__options\">\n            <div className=\"searchPage__optionsLeft\">\n              <div className=\"searchPage__option\">\n                <SearchIcon />\n                <Link to=\"/all\">All</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <DescriptionIcon />\n                <Link to=\"/news\">News </Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <ImageIcon />\n                <Link to=\"/images\">Images</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <LocalOfferIcon />\n                <Link to=\"/shopping\">shopping</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <RoomIcon />\n                <Link to=\"/maps\">maps</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <MoreVertIcon />\n                <Link to=\"/more\">more</Link>\n              </div>\n            </div>\n\n            <div className=\"searchPage__optionsRight\">\n              <div className=\"searchPage__option\">\n                <Link to=\"/settings\">Settings</Link>\n              </div>\n              <div className=\"searchPage__option\">\n                <Link to=\"/tools\">Tools</Link>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {term && (\n        <div className=\"searchPage__results\">\n          <p className=\"searchPage__resultCount\">\n\n            About {data?.searchInformation.formattedTotalResults} results (\n            {data?.searchInformation.formattedSearchTime} seconds) for{\" \"}\n            <strong>{term}</strong>\n          </p>\n\n          {data?.items.map((item) => (\n            <div className=\"searchPage__result\">\n              <a className=\"searchPage__resultLink\" href={item.link}>\n                {item.pagemap?.cse_image?.length > 0 &&\n                  item.pagemap?.cse_image[0]?.src && (\n                    <img\n                      className=\"searchPage__resultImage\"\n                      src={\n                        item.pagemap?.cse_image?.length > 0 &&\n                        item.pagemap?.cse_image[0]?.src\n                      }\n                      alt=\"\"\n                    />\n                  )}\n                {item.displayLink} â–¾\n              </a>\n              <a className=\"searchPage__resultTitle\" href={item.link}>\n                <h2>{item.title}</h2>\n              </a>\n\n              <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\n            </div>\n          ))}\n        </div>\n      )}\n    </div>\n    <div className=\"imageSection\" >\n      <Image />\n    </div>\n    </div>\n  );\n}\n\nexport default SearchPage;\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\News.js",[],"C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\pages\\NewsPage.js",["68"],"import React from 'react';\r\nimport { useStateValue } from \"../StateProvider\";\r\nimport useNews from '../useNews';\r\nimport './NewsPage.css';\r\nimport './SearchPage.css';\r\nimport { Search } from \"../components/Search\";\r\nimport { Link } from \"react-router-dom\";\r\nimport SearchIcon from \"@material-ui/icons/Search\";\r\nimport DescriptionIcon from \"@material-ui/icons/Description\";\r\nimport ImageIcon from \"@material-ui/icons/Image\";\r\nimport LocalOfferIcon from \"@material-ui/icons/LocalOffer\";\r\nimport RoomIcon from \"@material-ui/icons/Room\";\r\nimport MoreVertIcon from \"@material-ui/icons/MoreVert\";\r\nimport News from '../components/News';\r\n\r\n\r\nconst NewsPage = () => {\r\n    const [{ term }, dispatch] = useStateValue();\r\n    const { data } = useNews(term);\r\n    console.log(\"data:\", data)\r\n    return (\r\n        <div className='flex flex-col'>\r\n            <div className='flex  m-12'>\r\n                <img\r\n                    className=\"searchPage__logo\"\r\n                    src=\"https://www.google.com/images/branding/googlelogo/2x/googlelogo_color_272x92dp.png\"\r\n                    alt=\"\"\r\n                />\r\n                <div className=\"searchPage__headerBody\">\r\n                    <Search hideButtons />\r\n                    <div className=\"searchPage__options\">\r\n                        <div className=\"searchPage__optionsLeft\">\r\n                            <div className=\"searchPage__option\">\r\n                                <SearchIcon />\r\n                                <Link to=\"/all\">All</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option blue-highlight\">\r\n                                <DescriptionIcon />\r\n                                <Link to=\"/news\" className=''>News</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <ImageIcon />\r\n                                <Link to=\"/images\">Images</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <LocalOfferIcon />\r\n                                <Link to=\"/shopping\">shopping</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <RoomIcon />\r\n                                <Link to=\"/maps\">maps</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <MoreVertIcon />\r\n                                <Link to=\"/more\">more</Link>\r\n                            </div>\r\n                        </div>\r\n\r\n                        <div className=\"searchPage__optionsRight\">\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/settings\">Settings</Link>\r\n                            </div>\r\n                            <div className=\"searchPage__option\">\r\n                                <Link to=\"/tools\">Tools</Link>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                {/* {term && (\r\n                <div className=\"searchPage__results\">\r\n                    <p className=\"searchPage__resultCount\">\r\n                        About {data?.searchInformation.formattedTotalResults} results (\r\n                        {data?.searchInformation.formattedSearchTime} seconds) for{\" \"}\r\n                        <strong>{term}</strong>\r\n                    </p>\r\n\r\n                    {data?.items.map((item) => (\r\n                        <div className=\"searchPage__result\">\r\n                            <a className=\"searchPage__resultLink\" href={item.url}>\r\n                                {item.pagemap?.cse_image?.length > 0 &&\r\n                                    item.pagemap?.cse_image[0]?.src && (\r\n                                        <img\r\n                                            className=\"searchPage__resultImage\"\r\n                                            src={\r\n                                                item.pagemap?.cse_image?.length > 0 &&\r\n                                                item.pagemap?.cse_image[0]?.src\r\n                                            }\r\n                                            alt=\"\"\r\n                                        />\r\n                                    )}\r\n                                {item.displayLink} â–¾\r\n                            </a>\r\n                            <a className=\"searchPage__resultTitle\" href={item.url}>\r\n                                <h2>{item.title}</h2>\r\n                            </a>\r\n\r\n                            <p className=\"searchPage__resultSnippet\">{item.snippet}</p>\r\n                        </div>\r\n                    ))}\r\n                </div>\r\n            )} */}\r\n            </div>\r\n            <div className='ml-8'>\r\n                {term && data && \r\n                    <div className='flex-col'>\r\n                        <News\r\n                            title={data[0].title}\r\n                            body={data[0].description}\r\n                            date={data[0].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[0].urlToImage}\r\n                            link={data[0].url}\r\n                        />\r\n                        <News\r\n                            title={data[1].title}\r\n                            body={data[1].description}\r\n                            date={data[1].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[1].urlToImage}\r\n                            link={data[1].url}\r\n                        />\r\n                        <News\r\n                            title={data[2].title}\r\n                            body={data[2].description}\r\n                            date={data[2].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[2].urlToImage}\r\n                            link={data[2].url}\r\n                        />\r\n                        <News\r\n                            title={data[3].title}\r\n                            body={data[3].description}\r\n                            date={data[3].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[3].urlToImage}\r\n                            link={data[3].url}\r\n                        />\r\n                        <News\r\n                            title={data[4].title}\r\n                            body={data[4].description}\r\n                            date={data[4].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[4].urlToImage}\r\n                            link={data[4].url}\r\n                        />\r\n                        <News\r\n                            title={data[5].title}\r\n                            body={data[5].description}\r\n                            date={data[5].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[5].urlToImage}\r\n                            link={data[5].url}\r\n                        />\r\n                        <News\r\n                            title={data[6].title}\r\n                            body={data[6].description}\r\n                            date={data[6].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[6].urlToImage}\r\n                            link={data[6].url}\r\n                        />\r\n                        <News\r\n                            title={data[7].title}\r\n                            body={data[7].description}\r\n                            date={data[7].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[7].urlToImage}\r\n                            link={data[7].url}\r\n                        />\r\n                        <News\r\n                            title={data[8].title}\r\n                            body={data[8].description}\r\n                            date={data[8].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[8].urlToImage}\r\n                            link={data[8].url}\r\n                        />\r\n                        <News\r\n                            title={data[9].title}\r\n                            body={data[9].description}\r\n                            date={data[9].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[9].urlToImage}\r\n                            link={data[9].url}\r\n                        />\r\n                        <News\r\n                            title={data[10].title}\r\n                            body={data[10].description}\r\n                            date={data[10].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[10].urlToImage}\r\n                            link={data[10].url}\r\n                        />\r\n                        <News\r\n                            title={data[11].title}\r\n                            body={data[11].description}\r\n                            date={data[11].publishedAt.slice(0, 10)}\r\n                            imageSrc={data[11].urlToImage}\r\n                            link={data[11].url}\r\n                        />\r\n\r\n                        <News\r\n                            title=\"Wall Street hits record high following a 2-year round trip scarred by inflation\"\r\n                            body=\"The S&P 500 closed Friday at a record high. Some encouraging data came Friday after a preliminary report from the University of Michigan suggested the mood among U.S. consumers is roaring higher.\"\r\n                            date=\"2024-01-20\"\r\n                            imageSrc=\"https://www.shawlocal.com/resizer/lcbPU1YzPuT3a22GAv98CtpFKfk=/1200x630/filters:format(jpg):quality(70)/cloudfront-us-east-1.images.arcpublishing.com/shawmedia/KR2KFVHPWZDO7FIKD7VXD5KFDU.jpg\"\r\n                        />\r\n                    </div>\r\n                } \r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NewsPage\r\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\useGoogleSearch.js",["69"],"import { useState, useEffect } from \"react\";\nimport API_KEY from \"./keys\";\n\nconst CONTEXT_KEY = \"0003b9adcd0774823\";\n\nconst useGoogleSearch = (term) => {\n  const [data, setData] = useState(null);\n  useEffect(() => {\n    const fetchData = async () => {\n      // this key and cky is made to get more number of searches during development\n      const key = 'AIzaSyBl4wZzrh4j__OqkpgiVG4yPf1tjGXBtUY' || API_KEY\n      const cky = CONTEXT_KEY || '017576662512468239146'\n      fetch(\n        `https://www.googleapis.com/customsearch/v1?key=${key}&cx=${CONTEXT_KEY}&q=${term}`\n      )\n        .then((response) => response.json())\n        .then((result) => {\n          setData(result);\n        });\n    };\n\n    fetchData();\n  }, [term]);\n  return { data };\n};\nexport default useGoogleSearch;\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\Search.js",["70"],"import React, { useState } from \"react\";\nimport SearchIcon from \"@material-ui/icons/Search\";\nimport MicIcon from \"@material-ui/icons/Mic\";\nimport { Button } from \"@material-ui/core\";\nimport \"./Search.css\";\nimport { useStateValue } from \"../StateProvider\";\nimport { useHistory } from \"react-router-dom\";\nimport { actionTypes } from \"../reducer\";\n\nfunction Search({ hideButtons = false }) {\n  const [{}, dispatch] = useStateValue();\n  const history = useHistory();\n  const [term, setTerm] = useState(\"\");\n\n  const search = (e) => {\n    e.preventDefault();\n    console.log(\"search!\");\n\n    dispatch({\n      type: actionTypes.SET_SEARCH_TERM,\n      term: term,\n    });\n\n    history.push(`/search`);\n  };\n\n  return (\n    <form  className=\"search bg-slate-950\" >\n      <div className=\"search__input\">\n        <SearchIcon className=\"search__inputIcon\" />\n        <input value={term} onChange={(e) => setTerm(e.target.value)} />\n        <MicIcon />\n      </div>\n      {!hideButtons ? (\n        <div className=\"search__buttons\">\n          <Button onClick={search} type=\"submit\" variant=\"outlined\">\n            Google Search\n          </Button>\n          <Button variant=\"outlined\">I'm Feeling Lucky</Button>\n        </div>\n      ) : (\n        <div className=\"search__buttons\">\n          <Button\n            className=\"search__buttonsHidden\"\n            onClick={search}\n            type=\"submit\"\n            variant=\"outlined\"\n          >\n            Google Search\n          </Button>\n          <Button className=\"search__buttonsHidden\" variant=\"outlined\">\n            I'm Feeling Lucky\n          </Button>\n        </div>\n      )}\n    </form>\n  );\n}\n\nexport { Search }\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\useNews.js",["71"],"import { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst useNews = (term) => {\r\n    const [data, setData] = useState(null);\r\n\r\n    const getData = async () => {\r\n        try {\r\n            console.log(\"term in useNews:\",term);\r\n            const response = await axios.get(`https://newsapi.org/v2/everything?q=${term}&from=2023-12-20&sortBy=publishedAt&apiKey=1943664ed24847db8af9eaa374b56567`);\r\n            setData(response.data.articles);\r\n        } catch (error) {\r\n            console.error('Error fetching news:', error);\r\n        }\r\n    };\r\n\r\n    useEffect(() => {\r\n        getData();\r\n        return () => {\r\n            // Any cleanup code to run when the component unmounts\r\n        };\r\n    }, [term]);\r\n\r\n    return { data };\r\n};\r\n\r\nexport default useNews;\r\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\components\\Image.js",["72"],"import React, { useEffect, useState } from 'react';\r\nimport './Image.css'\r\nimport { useStateValue } from '../StateProvider';\r\nimport axios from 'axios';\r\n\r\n// 1st - semi-use\r\n// 2nd - fresh\r\n// 3rd - used\r\n\r\nconst Image = () => {\r\n    const [{ term }, dispatch] = useStateValue();\r\n    const [data, setData] = useState(null);\r\n\r\n    useEffect(() => {\r\n        const options = {\r\n            method: 'GET',\r\n            url: 'https://duckduckgo-image-search.p.rapidapi.com/search/image',\r\n            params: { q: term },\r\n            headers: {\r\n                'X-RapidAPI-Key': '05cd15f504msh4a50603a34f16c7p16a480jsn5570fc5f5fd7' || '6d8da3e21bmsh3faa1d3b5c531f7p1ee034jsnc295d434bb91' || 'd8dce66f93mshff2a2d1ec659d5cp19694bjsn667eb9481177',\r\n                'X-RapidAPI-Host': 'duckduckgo-image-search.p.rapidapi.com'\r\n            }\r\n        };\r\n\r\n        (async () => {\r\n            try {\r\n                console.log('Search term:', term);\r\n\r\n                const response = await axios.request(options);\r\n                console.log(response.data);\r\n                setData(response.data.results);\r\n            } catch (error) {\r\n                console.error(error);\r\n            }\r\n        })();\r\n    }, [term]);\r\n\r\n    return (\r\n        <div className='Image flex flex-col w-3'>\r\n            <h1 className='title'>Showing results for {term}...</h1>\r\n        <div className='flex w-3'>\r\n            {data && <a href={data[0].url}><img src={data[0].image} alt='Loading...' style={{ height: '240px' }} /></a>}\r\n            <div className='flex flex-col'>\r\n                {data && <a href={data[1].url}><img src={data[1].image} alt='Loading...' style={{ height: '120px' }} /> </a>}\r\n                {data && <a href={data[2].url}><img src={data[2].image} alt='Loading...' style={{ height: '120px' }} /> </a>}\r\n            </div>\r\n            <div className='flex flex-col'>\r\n                {data && <a href={data[3].url}><img src={data[3].image} alt='Loading...' style={{ height: '80px' }} /> </a>}\r\n                {data && <a href={data[4].url}><img src={data[4].image} alt='Loading...' style={{ height: '80px' }} /> </a>}\r\n                {data && <a href={data[5].url}><img src={data[5].image} alt='Loading...' style={{ height: '80px' }} /> </a>}\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n};\r\n\r\nexport default Image;\r\n","C:\\Users\\sv279\\OneDrive\\Desktop\\GoogleClone-main\\GoogleClone-main\\src\\keys.js",[],{"ruleId":"73","replacedBy":"74"},{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":16,"column":20,"nodeType":"79","messageId":"80","endLine":16,"endColumn":28},{"ruleId":"77","severity":1,"message":"78","line":18,"column":22,"nodeType":"79","messageId":"80","endLine":18,"endColumn":30},{"ruleId":"77","severity":1,"message":"81","line":12,"column":13,"nodeType":"79","messageId":"80","endLine":12,"endColumn":16},{"ruleId":"82","severity":1,"message":"83","line":11,"column":10,"nodeType":"84","messageId":"85","endLine":11,"endColumn":12},{"ruleId":"86","severity":1,"message":"87","line":22,"column":8,"nodeType":"88","endLine":22,"endColumn":14,"suggestions":"89"},{"ruleId":"77","severity":1,"message":"78","line":11,"column":22,"nodeType":"79","messageId":"80","endLine":11,"endColumn":30},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"no-unused-vars","'dispatch' is assigned a value but never used.","Identifier","unusedVar","'cky' is assigned a value but never used.","no-empty-pattern","Unexpected empty object pattern.","ObjectPattern","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getData'. Either include it or remove the dependency array.","ArrayExpression",["92"],"no-global-assign","no-unsafe-negation",{"desc":"93","fix":"94"},"Update the dependencies array to be: [getData, term]",{"range":"95","text":"96"},[729,735],"[getData, term]"]